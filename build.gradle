plugins {
   id  'com.github.spotbugs' version '1.6.10'
}

apply plugin: 'application'
apply plugin: 'jacoco'

mainClassName = 'main'

compileJava.options.encoding = 'UTF-8'

// Repositories and dependencies for code go here
repositories {
  mavenCentral()
}

dependencies {
  compile 'net.sourceforge.nekohtml:nekohtml:1.9.+'
  compile "junit:junit:4.12"
}

import org.apache.tools.ant.filters.*
 
// Replaces the version and build number with values listed in version.properties
processResources {
  filesMatching('**/version.properties')
  {
    filter ReplaceTokens, tokens: [
      "application.version": project.property("application.version"),
      "application.build": project.property("application.build")
    ]
  }
}

///////////////////////////////////////////////////////////////////////////
// Configure Checkstyle
///////////////////////////////////////////////////////////////////////////
apply plugin: 'checkstyle'
checkstyle {
  // Keep checkstyle a little quieter
  ignoreFailures = true
  showViolations = false
}

tasks.withType(Checkstyle) {
  reports {
    html.enabled = true
    xml.enabled = false
  }
}
checkstyle {
    toolVersion = "8.8"
}


///////////////////////////////////////////////////////////////////////////
// Configure SpotBugs
///////////////////////////////////////////////////////////////////////////

spotbugs {
  ignoreFailures = true
  toolVersion = '3.1.1'
}

// To generate an HTML report instead of XML
tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

///////////////////////////////////////////////////////////////////////////
// Configure Jacoco
///////////////////////////////////////////////////////////////////////////

jacoco {
    toolVersion = "0.8.0"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

test {
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
}